<?xml version="1.0"?>

<robot name="sentry_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
	<!-- Wheel parameters -->
	<xacro:property name="PI" value="3.1415926535897931" />

	<!-- Wheels -->
	<xacro:property name="wheel_radius" value="0.075" />
	<xacro:property name="wheel_height" value="0.04" />
	<xacro:property name="wheel_mass" value="0.353" /> <!-- in kg-->
	
	<xacro:property name="base_length" value = "0.55"/>
    	<xacro:property name="base_width" value = "0.45"/>
    	<xacro:property name="base_height" value = "0.22"/>
    	<xacro:property name="base_mass" value = "22.68"/>
    	
    	<xacro:property name="scale_size" value = "0.002"/>
    	
    	<xacro:property name="lidar_radius" value="0.05" />
	<xacro:property name="lidar_height" value="0.04" />
	<xacro:property name="lidar_mass" value="0.353" /> <!-- in kg-->
    	<xacro:property name="lidar_xyz" value="0 0 0"/> <!-- Center of mass -->
    	<xacro:property name="lidar_rpy" value="0 0 0"/> <!-- Orientation of inertia -->

    	<material name="yellow"><color rgba="0.8 0.8 0.0 1.0" /></material>
  	<material name="black"><color rgba="0.15 0.15 0.15 1.0" /></material>
  	<material name="dark_grey"><color rgba="0.2 0.2 0.2 1.0" /></material>
  	<material name="light_grey"><color rgba="0.4 0.4 0.4 1.0" /></material>
	
	<xacro:macro name="omni_steering" params="">
		<gazebo>
			<plugin name="omni_steering" filename="libgazebo_ros_planar_move.so">
				<commandTopic>cmd_vel</commandTopic>
				<odometryTopic>odom</odometryTopic>
				<odometryFrame>odom</odometryFrame>
				<odometryRate>50.0</odometryRate>
				<robotBaseFrame>base_footprint</robotBaseFrame>
				<publishTF>false</publishTF>
			</plugin>
		</gazebo>
	</xacro:macro>
	
	
	
	<xacro:macro name="box_inertia" params="m w h d">
	  <inertial>
	    <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
	    <mass value="${m}"/>
	    <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
	  </inertial>
	</xacro:macro>
	
	<xacro:macro name="cylinder_inertia" params="m r h">
	  <inertial>
	    <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
	    <mass value="${m}"/>
	    <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
	  </inertial>
	</xacro:macro>
	
	<xacro:property name="wheel_offset_x" value="0.28" />    <!-- x,y,z in translation from base_link to the center of the wheel -->
	<xacro:property name="wheel_offset_y" value="0.30" />
	<xacro:property name="wheel_offset_z" value="0.00" />
	 
	<xacro:macro name="sentry_base">

	  <!-- Robot mechanical and motor parameters -->
	  <xacro:property name="PI" value="3.1415926535897931"/>
	  <xacro:property name="wheel_width" value="0.175" />

		<!-- BASE FOOTPRINT -->
		<link name="base_footprint"></link>

		<joint name="base_footprint_joint" type="fixed">
		  <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" /> <!-- ${wheel_radius} property must be defined inside wheel description -->
		  <parent link="base_footprint"/>
		  <child link="base_link" />
		</joint>

	  <!-- BASE_LINK -->
	  <link name="base_link">
	    

	    <visual>
	       <origin xyz="0 0 0" rpy="0 0 0" />

	       <geometry>
		     <box size="0.55 0.45 0.22"/>
	       </geometry>

	       <material name="yellow" />
	    </visual>

	    <collision>
	       <origin xyz="0 0 0" rpy="0 0 0 " />
	       <geometry>
		 <box size="0.55 0.45 0.22"/>
	       </geometry>
	    </collision>
	    
	    <xacro:box_inertia m="${base_mass}" w="${base_width}" d="${base_length}" h="${base_height}"/>

	  </link>
	  

  	</xacro:macro>
  	
  	<xacro:macro name="lidar" params="">
  	
	  	<link name = "laser_frame">
	  	
			<visual>
			    <geometry>
				<cylinder radius="${lidar_radius}" length="${lidar_height}" />                
			    </geometry>
			    <origin xyz="0 0 0.0" rpy="0 0 0" />   
			    <material name="red"/>            
			</visual>
			
			<collision>
			    <geometry>
				<cylinder radius="${lidar_radius}" length="${lidar_height}" />                
			    </geometry>
			    <origin xyz="0 0 0.0" rpy="0 0 0" />   
			    <material name="yellow"/>            
			</collision>
			
			<xacro:cylinder_inertia m="${lidar_mass}" r="${lidar_radius}" h="${lidar_height}"/>
	    	</link>
	    	
	    	<joint name = "laser_joint" type ="fixed">
			<parent link="base_link"/>
			<child link= "laser_frame"/>
			<origin xyz="0.22 0 0.13" rpy= "0 0 0"/>
    		</joint>
    		
    		<gazebo reference="laser_frame">
			<material>Gazebo/Red</material>

			<sensor name="laser" type="ray">
			    <pose> 0 0 0 0 0 0 </pose>
			    <visualize>true</visualize>
			    <update_rate>10</update_rate>
			    <ray>
				<scan>
				    <horizontal>
				        <samples>360</samples>
				        <min_angle>-3.14</min_angle>
				        <max_angle>3.14</max_angle>
				    </horizontal>
				</scan>
				<range>
				    <min>0.3</min>
				    <max>12</max>
				</range>
			    </ray>
			    <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
				<ros>
				    <argument>~/out:=scan</argument>
				</ros>
				<output_type>sensor_msgs/LaserScan</output_type>
				<frame_name>laser_frame</frame_name>
			    </plugin>
			</sensor>
    		</gazebo>
	    	
	    
    	</xacro:macro>
    	
	<xacro:macro name="mecanum_wheel" params="prefix parent *origin reflect">

	    <link name="${prefix}_wheel_link">
	      <visual>
		<origin xyz="0 0 0" rpy="0 0 0" />
		<xacro:if value="${reflect}">
		  <geometry>
		    <mesh filename="$(find sentry)/meshes/mecanum_wheel_left.STL" scale="${scale_size} ${scale_size} ${scale_size}"/>
		  </geometry>
		  <material name="dark_grey" />
		</xacro:if>
		<xacro:unless value="${reflect}">
		  <geometry>
		    <mesh filename="$(find sentry)/meshes/mecanum_wheel_right.STL" scale="${scale_size} ${scale_size} ${scale_size}"/>
		  </geometry>
		</xacro:unless>
	      </visual>

	      <collision>
		<origin xyz="0 0 0" rpy="${PI/2} 0 0" />
		<geometry>
			<cylinder length="${wheel_height}" radius="${wheel_radius}" />
		</geometry>
	      </collision>

	      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}"/>
	      
	    </link>
	    
	    <joint name="${prefix}_wheel_joint" type="continuous">
	      <parent link="${parent}"/>
	      <child link="${prefix}_wheel_link"/>
	      <xacro:insert_block name="origin" />
	      <axis xyz="0 1 0" rpy="0 0 0" />
	      
	    </joint>

	    <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
	    <transmission name="${prefix}_wheel_joint_trans">
	      <type>transmission_interface/SimpleTransmission</type>
	      <joint name="${prefix}_wheel_joint" >
		<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
	      </joint>
	      <actuator name="${prefix}_wheel_joint_motor">
		 <mechanicalReduction>1</mechanicalReduction>
	      </actuator>
	    </transmission>


	  </xacro:macro>
	  <xacro:macro name="sentry">
		<xacro:sentry_base/>
		
		<xacro:lidar/>
		
		<xacro:mecanum_wheel prefix="sentry_front_right" parent="base_link" reflect="false">
			<origin xyz="${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:mecanum_wheel>

		<xacro:mecanum_wheel prefix="sentry_front_left" parent="base_link" reflect="true">
			<origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:mecanum_wheel>

		<xacro:mecanum_wheel prefix="sentry_back_left" parent="base_link" reflect="true">
			<origin xyz="-${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:mecanum_wheel>

		<xacro:mecanum_wheel prefix="sentry_back_right" parent="base_link" reflect="false">
			<origin xyz="-${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:mecanum_wheel>
		
		<xacro:omni_steering />

   	  </xacro:macro>
		
   <xacro:sentry/>

</robot>

